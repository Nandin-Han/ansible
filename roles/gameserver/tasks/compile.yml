---
# 游戏编译任务

- name: 编译游戏
  block:
    - name: 执行游戏编译
      ansible.builtin.command: "{{ gameserver_make_command }}"
      args:
        chdir: "{{ host_svn_game_dir }}/{{ game_name }}"
      register: compile_result
      changed_when: compile_result.rc == 0
      tags: compile

    - name: 记录编译成功日志
      ansible.builtin.lineinfile:
        path: "{{ gameserver_deploy_log_file }}"
        line: "[{{ ansible_date_time.iso8601 }}] [{{ gameserver_deploy_playbook_name }}] [NOTICE] 游戏编译成功 - 主机={{ inventory_hostname }}, {{ game_name }}"
        mode: "0644"
      delegate_to: localhost
  rescue:
    - name: 记录编译失败日志
      ansible.builtin.lineinfile:
        path: "{{ gameserver_deploy_log_file }}"
        line: "[{{ ansible_date_time.iso8601 }}] [{{ gameserver_deploy_playbook_name }}] [ERROR] 游戏编译失败 - 主机={{ inventory_hostname }}, {{ game_name }}"
        mode: "0644"
      delegate_to: localhost

    - name: 终止执行
      ansible.builtin.fail:
        msg: "游戏编译失败"

- name: 解析makefile获取LIBNAME
  ansible.builtin.shell: |
    set -o pipefail
    grep -i '^LIBNAME' {{ host_svn_game_dir }}/{{ game_name }}/makefile | head -1 | awk -F '=' '{gsub(/^[ \t]+|[ \t]+$/,"",$2); print $2}'
  register: so_file_result
  changed_when: false

- name: 解析makefile获取SODIR的文件夹
  ansible.builtin.shell: |
    set -o pipefail
    grep -i '^SODIR' {{ host_svn_game_dir }}/{{ game_name }}/makefile | head -1 | awk -F '/' '{print $5}'
  register: so_folder_result
  changed_when: false

- name: 设置产物变量
  ansible.builtin.set_fact:
    so_file: "{{ so_file_result.stdout }}"
    so_file_dist_folder: "{{ so_folder_result.stdout }}"
    so_file_dir: "{{ host_svn_bin_dir }}/{{ so_folder_result.stdout }}"

- name: 验证编译产物存在
  ansible.builtin.stat:
    path: "{{ so_file_dir }}/{{ so_file }}"
  register: compiled_file
  failed_when: not compiled_file.stat.exists
  